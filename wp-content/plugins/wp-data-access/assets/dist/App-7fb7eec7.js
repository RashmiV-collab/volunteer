import{r as t,_ as m,l as s,C as n,j as r,v as p}from"./main.js";import{M as c}from"./MetaData-bdfb949d.js";import"./iconBase-8840166b.js";const i=t.lazy(()=>m(()=>import("./Alert-7fb10588.js"),["./Alert-7fb10588.js","./main.js","./main-a9f78bc8.css","./index.esm-df7700a0.js","./iconBase-8840166b.js","./AdminTheme-ba57f315.js","./AlertTitle-902c49a6.js","./createSvgIcon-d0cfe483.js","./Close-9e29875c.js"],import.meta.url));function g({dataSource:o}){s.debug(o),t.useEffect(()=>{n.appDebug?(s.setLevel("debug"),s.debug(n.appName+" started: debug = on")):s.setLevel("info")},[]);let a="",l="";try{const e=JSON.parse(o.replaceAll("'",'"'));if(e.dbs&&e.tbl)a=e.dbs,l=e.tbl;else return console.error("Invalid arguments"),r.jsx(t.Suspense,{children:r.jsx(i,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}catch(e){return console.error("Invalid arguments",e),r.jsx(t.Suspense,{children:r.jsx(i,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}return r.jsx(c,{appId:p(),dbs:a,tbl:l})}export{g as default};
